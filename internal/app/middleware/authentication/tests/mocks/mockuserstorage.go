// Code generated by MockGen. DO NOT EDIT.
// Source: simpleJWT.go

// Package mock_authentication is a generated GoMock package.
package mock_authentication

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockuserStorage is a mock of userStorage interface.
type MockuserStorage struct {
	ctrl     *gomock.Controller
	recorder *MockuserStorageMockRecorder
}

// MockuserStorageMockRecorder is the mock recorder for MockuserStorage.
type MockuserStorageMockRecorder struct {
	mock *MockuserStorage
}

// NewMockuserStorage creates a new mock instance.
func NewMockuserStorage(ctrl *gomock.Controller) *MockuserStorage {
	mock := &MockuserStorage{ctrl: ctrl}
	mock.recorder = &MockuserStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockuserStorage) EXPECT() *MockuserStorageMockRecorder {
	return m.recorder
}

// SaveNewUser mocks base method.
func (m *MockuserStorage) SaveNewUser() (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveNewUser")
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SaveNewUser indicates an expected call of SaveNewUser.
func (mr *MockuserStorageMockRecorder) SaveNewUser() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveNewUser", reflect.TypeOf((*MockuserStorage)(nil).SaveNewUser))
}
